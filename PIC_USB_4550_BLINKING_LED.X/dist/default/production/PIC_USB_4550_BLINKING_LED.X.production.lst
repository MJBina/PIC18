

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 18 11:27:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TMR0	set	4054
    53  0000                     _PORTD	set	3971
    54  0000                     _TRISBbits	set	3987
    55  0000                     _TRISDbits	set	3989
    56  0000                     _CCP1CON	set	4029
    57  0000                     _PORTEbits	set	3972
    58  0000                     _ADCON1	set	4033
    59  0000                     _CMCON	set	4020
    60  0000                     _INTCON	set	4082
    61  0000                     _INTCONbits	set	4082
    62  0000                     _T0CONbits	set	4053
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  0000F0                     __pcinit:
    68                           	opt stack 0
    69  0000F0                     start_initialization:
    70                           	opt stack 0
    71  0000F0                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to COMRAM (2 bytes)
    75  0000F0  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
    76  0000F2  6A13               	clrf	__pbssCOMRAM& (0+255),c
    77  0000F4                     end_of_initialization:
    78                           	opt stack 0
    79  0000F4                     __end_of__initialization:
    80                           	opt stack 0
    81  0000F4  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    82  0000F6  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    83  0000F8  0100               	movlb	0
    84  0000FA  EF59  F000         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	bssCOMRAM
    87  000013                     __pbssCOMRAM:
    88                           	opt stack 0
    89  000013                     __Timer0Count:
    90                           	opt stack 0
    91  000013                     	ds	2
    92                           
    93                           	psect	cstackCOMRAM
    94  000001                     __pcstackCOMRAM:
    95                           	opt stack 0
    96  000001                     ??_ISR:
    97  000001                     
    98                           ; 1 bytes @ 0x0
    99  000001                     	ds	18
   100  000013                     
   101                           ; 1 bytes @ 0x12
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 194 in file "../main.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;		None
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, cstack
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   121 ;;      Params:         0       0       0       0       0       0       0       0       0
   122 ;;      Locals:         0       0       0       0       0       0       0       0       0
   123 ;;      Temps:          0       0       0       0       0       0       0       0       0
   124 ;;      Totals:         0       0       0       0       0       0       0       0       0
   125 ;;Total ram usage:        0 bytes
   126 ;; Hardware stack levels required when called:    3
   127 ;; This function calls:
   128 ;;		__Timer0Config
   129 ;;		__Timer0Start
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  0000B2                     __ptext0:
   137                           	opt stack 0
   138  0000B2                     _main:
   139                           	opt stack 28
   140                           
   141                           ;main.c: 197: INTCON = 0x0;
   142                           
   143                           ;incstack = 0
   144  0000B2  0E00               	movlw	0
   145  0000B4  6EF2               	movwf	intcon,c	;volatile
   146                           
   147                           ;main.c: 198: CMCON = 0x07;
   148  0000B6  0E07               	movlw	7
   149  0000B8  6EB4               	movwf	4020,c	;volatile
   150                           
   151                           ;main.c: 199: ADCON1 = 0x06;
   152  0000BA  0E06               	movlw	6
   153  0000BC  6EC1               	movwf	4033,c	;volatile
   154                           
   155                           ;main.c: 201: PORTEbits.RDPU = 0;
   156  0000BE  9E84               	bcf	3972,7,c	;volatile
   157                           
   158                           ;main.c: 202: CCP1CON = 0;
   159  0000C0  0E00               	movlw	0
   160  0000C2  6EBD               	movwf	4029,c	;volatile
   161                           
   162                           ;main.c: 203: TRISDbits.TRISD3 = 0;
   163  0000C4  9695               	bcf	3989,3,c	;volatile
   164                           
   165                           ;main.c: 204: TRISBbits.TRISB4 = 1;
   166  0000C6  8893               	bsf	3987,4,c	;volatile
   167                           
   168                           ;main.c: 207: _Timer0Config();
   169  0000C8  EC86  F000         	call	__Timer0Config	;wreg free
   170                           
   171                           ;main.c: 208: _Timer0Start();
   172  0000CC  EC7F  F000         	call	__Timer0Start	;wreg free
   173                           
   174                           ;main.c: 209: INTCONbits.GIE = 1;
   175  0000D0  8EF2               	bsf	intcon,7,c	;volatile
   176  0000D2                     
   177                           ;main.c: 215: PORTD ^= 0x08;
   178  0000D2  0E08               	movlw	8
   179  0000D4  1A83               	xorwf	3971,f,c	;volatile
   180  0000D6  BE14               	btfsc	__Timer0Count+1,7,c
   181  0000D8  D7FE               	goto	l52
   182  0000DA  0EE8               	movlw	232
   183  0000DC  5C13               	subwf	__Timer0Count,w,c
   184  0000DE  0E03               	movlw	3
   185  0000E0  5814               	subwfb	__Timer0Count+1,w,c
   186  0000E2  A0D8               	btfss	status,0,c
   187  0000E4  D7F8               	goto	l52
   188                           
   189                           ;main.c: 218: _Timer0Count = 0;
   190  0000E6  0E00               	movlw	0
   191  0000E8  6E14               	movwf	__Timer0Count+1,c
   192  0000EA  0E00               	movlw	0
   193  0000EC  6E13               	movwf	__Timer0Count,c
   194  0000EE  D7F1               	goto	l50
   195  0000F0                     __end_of_main:
   196                           	opt stack 0
   197                           intcon	equ	0xFF2
   198                           status	equ	0xFD8
   199                           
   200 ;; *************** function __Timer0Start *****************
   201 ;; Defined at:
   202 ;;		line 134 in file "../main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   216 ;;      Params:         0       0       0       0       0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0       0       0       0       0
   218 ;;      Temps:          0       0       0       0       0       0       0       0       0
   219 ;;      Totals:         0       0       0       0       0       0       0       0       0
   220 ;;Total ram usage:        0 bytes
   221 ;; Hardware stack levels used:    1
   222 ;; Hardware stack levels required when called:    2
   223 ;; This function calls:
   224 ;;		Nothing
   225 ;; This function is called by:
   226 ;;		_main
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text1
   231  0000FE                     __ptext1:
   232                           	opt stack 0
   233  0000FE                     __Timer0Start:
   234                           	opt stack 28
   235                           
   236                           ;main.c: 137: INTCONbits.TMR0IF = 0;
   237                           
   238                           ;incstack = 0
   239  0000FE  94F2               	bcf	intcon,2,c	;volatile
   240                           
   241                           ;main.c: 140: TMR0 = (0x06);
   242  000100  0E00               	movlw	0
   243  000102  6ED7               	movwf	4055,c	;volatile
   244  000104  0E06               	movlw	6
   245  000106  6ED6               	movwf	4054,c	;volatile
   246                           
   247                           ;main.c: 143: INTCONbits.TMR0IE = 1;
   248  000108  8AF2               	bsf	intcon,5,c	;volatile
   249  00010A  0012               	return	
   250  00010C                     __end_of__Timer0Start:
   251                           	opt stack 0
   252                           intcon	equ	0xFF2
   253                           status	equ	0xFD8
   254                           
   255 ;; *************** function __Timer0Config *****************
   256 ;; Defined at:
   257 ;;		line 99 in file "../main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         0       0       0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used:    1
   277 ;; Hardware stack levels required when called:    2
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text2
   286  00010C                     __ptext2:
   287                           	opt stack 0
   288  00010C                     __Timer0Config:
   289                           	opt stack 28
   290                           
   291                           ;main.c: 104: T0CONbits.T0CS = 0;
   292                           
   293                           ;incstack = 0
   294  00010C  9AD5               	bcf	4053,5,c	;volatile
   295                           
   296                           ;main.c: 109: T0CONbits.PSA = 0;
   297  00010E  96D5               	bcf	4053,3,c	;volatile
   298                           
   299                           ;main.c: 120: T0CONbits.T0PS = 0b100;
   300  000110  50D5               	movf	4053,w,c	;volatile
   301  000112  0BF8               	andlw	-8
   302  000114  0904               	iorlw	4
   303  000116  6ED5               	movwf	4053,c	;volatile
   304  000118  0012               	return	
   305  00011A                     __end_of__Timer0Config:
   306                           	opt stack 0
   307                           intcon	equ	0xFF2
   308                           status	equ	0xFD8
   309                           
   310 ;; *************** function _ISR *****************
   311 ;; Defined at:
   312 ;;		line 167 in file "../main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   326 ;;      Params:         0       0       0       0       0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0       0       0
   328 ;;      Temps:         18       0       0       0       0       0       0       0       0
   329 ;;      Totals:        18       0       0       0       0       0       0       0       0
   330 ;;Total ram usage:       18 bytes
   331 ;; Hardware stack levels used:    1
   332 ;; Hardware stack levels required when called:    1
   333 ;; This function calls:
   334 ;;		__Timer0ISR
   335 ;; This function is called by:
   336 ;;		Interrupt level 2
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	intcode
   341  000008                     __pintcode:
   342                           	opt stack 0
   343  000008                     _ISR:
   344                           	opt stack 28
   345                           
   346                           ;incstack = 0
   347  000008  8215               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   348  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   349                           intcon	equ	0xFF2
   350                           status	equ	0xFD8
   351                           
   352                           	psect	intcode_body
   353  000012                     __pintcode_body:
   354                           	opt stack 28
   355  000012                     int_func:
   356                           	opt stack 28
   357  000012  0006               	pop		; remove dummy address from shadow register refresh
   358  000014  CFFA F001          	movff	pclath,??_ISR
   359  000018  CFFB F002          	movff	pclatu,??_ISR+1
   360  00001C  CFE9 F003          	movff	fsr0l,??_ISR+2
   361  000020  CFEA F004          	movff	fsr0h,??_ISR+3
   362  000024  CFE1 F005          	movff	fsr1l,??_ISR+4
   363  000028  CFE2 F006          	movff	fsr1h,??_ISR+5
   364  00002C  CFD9 F007          	movff	fsr2l,??_ISR+6
   365  000030  CFDA F008          	movff	fsr2h,??_ISR+7
   366  000034  CFF3 F009          	movff	prodl,??_ISR+8
   367  000038  CFF4 F00A          	movff	prodh,??_ISR+9
   368  00003C  CFF6 F00B          	movff	tblptrl,??_ISR+10
   369  000040  CFF7 F00C          	movff	tblptrh,??_ISR+11
   370  000044  CFF8 F00D          	movff	tblptru,??_ISR+12
   371  000048  CFF5 F00E          	movff	tablat,??_ISR+13
   372  00004C  C015  F00F         	movff	btemp,??_ISR+14
   373  000050  C016  F010         	movff	btemp+1,??_ISR+15
   374  000054  C017  F011         	movff	btemp+2,??_ISR+16
   375  000058  C018  F012         	movff	btemp+3,??_ISR+17
   376                           
   377                           ;main.c: 169: if(INTCONbits.TMR0IF)
   378  00005C  A4F2               	btfss	intcon,2,c	;volatile
   379  00005E  D003               	goto	i2l38
   380                           
   381                           ;main.c: 170: {
   382                           ;main.c: 172: INTCONbits.TMR0IF = 0;
   383  000060  94F2               	bcf	intcon,2,c	;volatile
   384                           
   385                           ;main.c: 173: _Timer0ISR();
   386  000062  EC8D  F000         	call	__Timer0ISR	;wreg free
   387  000066                     i2l38:
   388  000066  C012  F018         	movff	??_ISR+17,btemp+3
   389  00006A  C011  F017         	movff	??_ISR+16,btemp+2
   390  00006E  C010  F016         	movff	??_ISR+15,btemp+1
   391  000072  C00F  F015         	movff	??_ISR+14,btemp
   392  000076  C00E  FFF5         	movff	??_ISR+13,tablat
   393  00007A  C00D  FFF8         	movff	??_ISR+12,tblptru
   394  00007E  C00C  FFF7         	movff	??_ISR+11,tblptrh
   395  000082  C00B  FFF6         	movff	??_ISR+10,tblptrl
   396  000086  C00A  FFF4         	movff	??_ISR+9,prodh
   397  00008A  C009  FFF3         	movff	??_ISR+8,prodl
   398  00008E  C008  FFDA         	movff	??_ISR+7,fsr2h
   399  000092  C007  FFD9         	movff	??_ISR+6,fsr2l
   400  000096  C006  FFE2         	movff	??_ISR+5,fsr1h
   401  00009A  C005  FFE1         	movff	??_ISR+4,fsr1l
   402  00009E  C004  FFEA         	movff	??_ISR+3,fsr0h
   403  0000A2  C003  FFE9         	movff	??_ISR+2,fsr0l
   404  0000A6  C002  FFFB         	movff	??_ISR+1,pclatu
   405  0000AA  C001  FFFA         	movff	??_ISR,pclath
   406  0000AE  9215               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   407  0000B0  0011               	retfie		f
   408  0000B2                     __end_of_ISR:
   409                           	opt stack 0
   410                           pclatu	equ	0xFFB
   411                           pclath	equ	0xFFA
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           prodh	equ	0xFF4
   417                           prodl	equ	0xFF3
   418                           intcon	equ	0xFF2
   419                           fsr0h	equ	0xFEA
   420                           fsr0l	equ	0xFE9
   421                           fsr1h	equ	0xFE2
   422                           fsr1l	equ	0xFE1
   423                           fsr2h	equ	0xFDA
   424                           fsr2l	equ	0xFD9
   425                           status	equ	0xFD8
   426                           
   427 ;; *************** function __Timer0ISR *****************
   428 ;; Defined at:
   429 ;;		line 154 in file "../main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   443 ;;      Params:         0       0       0       0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_ISR
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text4
   457  00011A                     __ptext4:
   458                           	opt stack 0
   459  00011A                     __Timer0ISR:
   460                           	opt stack 28
   461                           
   462                           ;main.c: 157: TMR0 = (0x06);
   463                           
   464                           ;incstack = 0
   465  00011A  0E00               	movlw	0
   466  00011C  6ED7               	movwf	4055,c	;volatile
   467  00011E  0E06               	movlw	6
   468  000120  6ED6               	movwf	4054,c	;volatile
   469                           
   470                           ;main.c: 158: _Timer0Count++;
   471  000122  4A13               	infsnz	__Timer0Count,f,c
   472  000124  2A14               	incf	__Timer0Count+1,f,c
   473  000126  0012               	return	
   474  000128                     __end_of__Timer0ISR:
   475                           	opt stack 0
   476  0000                     pclatu	equ	0xFFB
   477                           pclath	equ	0xFFA
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           prodh	equ	0xFF4
   483                           prodl	equ	0xFF3
   484                           intcon	equ	0xFF2
   485                           fsr0h	equ	0xFEA
   486                           fsr0l	equ	0xFE9
   487                           fsr1h	equ	0xFE2
   488                           fsr1l	equ	0xFE1
   489                           fsr2h	equ	0xFDA
   490                           fsr2l	equ	0xFD9
   491                           status	equ	0xFD8
   492                           pclatu	equ	0xFFB
   493                           pclath	equ	0xFFA
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           prodh	equ	0xFF4
   499                           prodl	equ	0xFF3
   500                           intcon	equ	0xFF2
   501                           fsr0h	equ	0xFEA
   502                           fsr0l	equ	0xFE9
   503                           fsr1h	equ	0xFE2
   504                           fsr1l	equ	0xFE1
   505                           fsr2h	equ	0xFDA
   506                           fsr2l	equ	0xFD9
   507                           status	equ	0xFD8
   508                           
   509                           	psect	rparam
   510  0000                     pclatu	equ	0xFFB
   511                           pclath	equ	0xFFA
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           prodh	equ	0xFF4
   517                           prodl	equ	0xFF3
   518                           intcon	equ	0xFF2
   519                           fsr0h	equ	0xFEA
   520                           fsr0l	equ	0xFE9
   521                           fsr1h	equ	0xFE2
   522                           fsr1l	equ	0xFE1
   523                           fsr2h	equ	0xFDA
   524                           fsr2l	equ	0xFD9
   525                           status	equ	0xFD8
   526                           
   527                           	psect	temp
   528  000015                     btemp:
   529                           	opt stack 0
   530  000015                     	ds	1
   531  0000                     int$flags	set	btemp
   532  0000                     wtemp6	set	btemp+1
   533                           pclatu	equ	0xFFB
   534                           pclath	equ	0xFFA
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           prodh	equ	0xFF4
   540                           prodl	equ	0xFF3
   541                           intcon	equ	0xFF2
   542                           fsr0h	equ	0xFEA
   543                           fsr0l	equ	0xFE9
   544                           fsr1h	equ	0xFE2
   545                           fsr1l	equ	0xFE1
   546                           fsr2h	equ	0xFDA
   547                           fsr2l	equ	0xFD9
   548                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      __Timer0Config
                       __Timer0Start
 ---------------------------------------------------------------------------------
 (1) __Timer0Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __Timer0Config                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 18    18      0       0
                                              0 COMRAM    18    18      0
                         __Timer0ISR
 ---------------------------------------------------------------------------------
 (3) __Timer0ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __Timer0Config
   __Timer0Start

 _ISR (ROOT)
   __Timer0ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      14       1       21.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      20        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 18 11:27:18 2018

                     l50 00D2                       l52 00D6              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _ISR 0008             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
                   i2l38 0066                     _TMR0 000FD6            __CFG_FCMEN$ON 000000  
                   _main 00B2                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0015                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_ISR 0001  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _CMCON 000FB4                    _PORTD 000F83            __CFG_USBDIV$1 000000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8                    wtemp6 0016           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 00F0             __end_of_main 00F0  
                 ??_main 0013            __activetblptr 000000                   _ADCON1 000FC1  
                 _INTCON 000FF2    __end_of__Timer0Config 011A           __CFG_XINST$OFF 000000  
             __Timer0ISR 011A           __CFG_STVREN$ON 000000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 00F4            ___rparam_used 000001           __pcstackCOMRAM 0001  
            ?__Timer0ISR 0001                  _CCP1CON 000FBD            ?__Timer0Start 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00F0                  __ramtop 0800                  __ptext0 00B2  
                __ptext1 00FE                  __ptext2 010C                  __ptext4 011A  
              _T0CONbits 000FD5             __size_of_ISR 00AA           ??__Timer0Start 0013  
         __pintcode_body 0012      __size_of__Timer0ISR 000E     end_of_initialization 00F4  
                int_func 0012                _PORTEbits 000F84                _TRISBbits 000F93  
              _TRISDbits 000F95   __size_of__Timer0Config 000E      start_initialization 00F0  
            __end_of_ISR 00B2     __end_of__Timer0Start 010C             ??__Timer0ISR 0001  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0013       __end_of__Timer0ISR 0128  
          __Timer0Config 010C                __pintcode 0008           ?__Timer0Config 0001  
       __CFG_WDTPS$32768 000000    __size_of__Timer0Start 000E                 __Hrparam 0000  
               __Lrparam 0000             __Timer0Count 0013             __Timer0Start 00FE  
        ??__Timer0Config 0013            __size_of_main 003E                 int$flags 0015  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
